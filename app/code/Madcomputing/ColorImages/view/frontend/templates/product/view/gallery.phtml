

<?php 
	
    $images = $block->getGalleryImagesJson();
    
    $product = $block->getProduct();
    
    $colorJSON = file_get_contents("images/color-images/map.json");
	$colorMap = json_decode($colorJSON, true);
    
    foreach ($product->getOptions() as $o) {
	    
		if($o->getTitle() == 'Color / Finish'){

            $colorImages = [];
            
            //$colorImages[] = json_decode($images[0]);
            
			foreach ($o->getValues() as $value) {
				
                if(array_key_exists($value->getData()['title'], $colorMap)){
                    
                    $colorMapItem = $colorMap[$value->getData()['title']];
                    
                    $fileName = $colorMapItem['filename'];
                    
                    if(array_key_exists('skus', $colorMapItem)){
                        if(array_key_exists($product->getSku(), $colorMapItem['skus'])){
                            $fileName = $colorMapItem['skus'][$product->getSku()];
                        }
                    }
                    
                    $colorImages[] = array(
                        "thumb"=>"/images/color-images/$fileName",
                        "img"=>"/images/color-images/$fileName",
                        "full"=>"/images/color-images/$fileName",
                        "caption"=>$value->getData()['title'],
                        "position"=>"110",
                        "isMain"=>false,
                        "type"=>"image",
                        "videoUrl"=>null,
                        "optionValue"=>$value->getData()['option_type_id']
                    );

		        	
			    }else{
			    	//print_r('not found');
			    	//print_r('<br>');
			    	//print_r('<br>');
			    }
		    }

            $images = json_encode($colorImages);

		}

	    /*foreach ($o->getValues() as $value) {
	        print_r($value->getData());
	    }*/
	}
    
    $decodedImages = json_decode($images, true);
    
    foreach($decodedImages as $key => $image){
        
        $decodedImages[$key]['img'] = $image['full'];
    }
    
    $images = json_encode($decodedImages);
    
?>



<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/**
 * Product media data template
 *
 * @var $block \Magento\Catalog\Block\Product\View\Gallery
 */
?>
<div class="gallery-placeholder _block-content-loading" data-gallery-role="gallery-placeholder">
    <div data-role="loader" class="loading-mask">
        <div class="loader">
            <img src="<?= /* @escapeNotVerified */ $block->getViewFileUrl('images/loader-1.gif') ?>"
                 alt="<?= /* @escapeNotVerified */ __('Loading...') ?>">
        </div>
    </div>
</div>
<!--Fix for jumping content. Loader must be the same size as gallery.-->
<script>
    var config = {
            "width": <?= /* @escapeNotVerified */ $block->getImageAttribute('product_page_image_medium', 'width') ?>,
            "thumbheight": <?php /* @escapeNotVerified */ echo $block->getImageAttribute('product_page_image_small', 'height')
                        ?: $block->getImageAttribute('product_page_image_small', 'width'); ?>,
            "navtype": "<?= /* @escapeNotVerified */ $block->getVar("gallery/navtype") ?>",
            "height": <?= /* @escapeNotVerified */ $block->getImageAttribute('product_page_image_medium', 'height') ?>
        },
        thumbBarHeight = 0,
        loader = document.querySelectorAll('[data-gallery-role="gallery-placeholder"] [data-role="loader"]')[0];

    if (config.navtype === 'horizontal') {
        thumbBarHeight = config.thumbheight;
    }

    loader.style.paddingBottom = ( config.height / config.width * 100) + "%";
    
    require([
        'jquery'
    ], function ($) {
        $(function(){
            
            var colorImageSelect;
            var colorImageField;
            
            $('.field .label span').each(function(){
                
                var span = $(this);
                
                var content = span.html();
                if(content == 'Color / Finish'){
                    
                    colorImageField = span.closest('.field');
                    
                    colorImageSelect = colorImageField.find('select');
                    
                    colorImageSelect.on('change', function(){
                        var value = $(this).val();
                        
                        var matchingThumb = $('.color-image-thumb-container-' + value);
                        
                        matchingThumb.click();
                        
                        showThumbUnderDropdown(matchingThumb);
                        
                        /*$('.color-image-thumb-container', field).remove();
                        
                        var thumbClone = matchingThumb.clone();
                        
                        thumbClone.addClass('color-image-selected');
                        
                        colorImageSelect.after(thumbClone);*/
                        
                        
                    });
                    
                }
                
                //console.log(content);
                
            });
            
            $('.color-image-thumb-container').on('click', function(){
                
                var thumb = $(this);
                
                $('.fotorama-item').data('fotorama').show(thumb.data('thumbindex'));
                
                if(colorImageSelect){
                    colorImageSelect.val(thumb.data('optionvalue'));
                    
                    showThumbUnderDropdown(thumb);
                    
                }
                
            });
           
           function showThumbUnderDropdown(matchingThumb){
                $('.color-image-thumb-container', colorImageField).remove();
                            
                var thumbClone = matchingThumb.clone();
                
                thumbClone.addClass('color-image-selected');
                
                colorImageSelect.after(thumbClone);
            }
            
        });
    });
    
</script>
<script type="text/x-magento-init">
    {
        "[data-gallery-role=gallery-placeholder]": {
            "mage/gallery/gallery": {
                "mixins":["magnifier/magnify"],
                "magnifierOpts": <?= /* @escapeNotVerified */ $block->getMagnifier() ?>,
                "data": <?= /* @escapeNotVerified */ $images ?>,
                "options": {
                    "nav": "<?= /* @escapeNotVerified */ $block->getVar("gallery/nav") ?>",
                    <?php if (($block->getVar("gallery/loop"))): ?>
                        "loop": <?= /* @escapeNotVerified */ $block->getVar("gallery/loop") ?>,
                    <?php endif; ?>
                    <?php if (($block->getVar("gallery/keyboard"))): ?>
                        "keyboard": <?= /* @escapeNotVerified */ $block->getVar("gallery/keyboard") ?>,
                    <?php endif; ?>
                    <?php if (($block->getVar("gallery/arrows"))): ?>
                        "arrows": <?= /* @escapeNotVerified */ $block->getVar("gallery/arrows") ?>,
                    <?php endif; ?>
                    <?php if (($block->getVar("gallery/allowfullscreen"))): ?>
                        "allowfullscreen": <?= /* @escapeNotVerified */ $block->getVar("gallery/allowfullscreen") ?>,
                    <?php endif; ?>
                    <?php if (($block->getVar("gallery/caption"))): ?>
                        "showCaption": <?= /* @escapeNotVerified */ $block->getVar("gallery/caption") ?>,
                    <?php endif; ?>
                    "width": "<?= /* @escapeNotVerified */ $block->getImageAttribute('product_page_image_medium', 'width') ?>",
                    "thumbwidth": "<?= /* @escapeNotVerified */ $block->getImageAttribute('product_page_image_small', 'width') ?>",
                    <?php if ($block->getImageAttribute('product_page_image_small', 'height') || $block->getImageAttribute('product_page_image_small', 'width')): ?>
                        "thumbheight": <?php /* @escapeNotVerified */ echo $block->getImageAttribute('product_page_image_small', 'height')
                        ?: $block->getImageAttribute('product_page_image_small', 'width'); ?>,
                    <?php endif; ?>
                    <?php if ($block->getImageAttribute('product_page_image_medium', 'height') || $block->getImageAttribute('product_page_image_medium', 'width')): ?>
                        "height": 400,
                    <?php endif; ?>
                    <?php if ($block->getVar("gallery/transition/duration")): ?>
                        "transitionduration": <?= /* @escapeNotVerified */ $block->getVar("gallery/transition/duration") ?>,
                    <?php endif; ?>
                    "transition": "<?= /* @escapeNotVerified */ $block->getVar("gallery/transition/effect") ?>",
                    <?php if (($block->getVar("gallery/navarrows"))): ?>
                        "navarrows": <?= /* @escapeNotVerified */ $block->getVar("gallery/navarrows") ?>,
                    <?php endif; ?>
                    "navtype": "<?= /* @escapeNotVerified */ $block->getVar("gallery/navtype") ?>",
                    "navdir": "<?= /* @escapeNotVerified */ $block->getVar("gallery/navdir") ?>"
                },
                "fullscreen": {
                    "nav": "<?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/nav") ?>",
                    <?php if ($block->getVar("gallery/fullscreen/loop")): ?>
                        "loop": <?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/loop") ?>,
                    <?php endif; ?>
                    "navdir": "<?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/navdir") ?>",
                    <?php if ($block->getVar("gallery/transition/navarrows")): ?>
                        "navarrows": <?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/navarrows") ?>,
                    <?php endif; ?>
                    "navtype": "<?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/navtype") ?>",
                    <?php if ($block->getVar("gallery/fullscreen/arrows")): ?>
                        "arrows": <?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/arrows") ?>,
                    <?php endif; ?>
                    <?php if ($block->getVar("gallery/fullscreen/caption")): ?>
                        "showCaption": <?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/caption") ?>,
                    <?php endif; ?>
                    <?php if ($block->getVar("gallery/fullscreen/transition/duration")): ?>
                        "transitionduration": <?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/transition/duration") ?>,
                    <?php endif; ?>
                    "transition": "<?= /* @escapeNotVerified */ $block->getVar("gallery/fullscreen/transition/effect") ?>"
                },
                "breakpoints": <?= /* @escapeNotVerified */ $block->getBreakpoints() ?>
            }
        }
    }
</script>


<?php
    if(isset($decodedImages)){
        foreach ($decodedImages as $index => $image) {
            
            $optionValue = (array_key_exists('optionValue', $image)) ? $image['optionValue']: '0';
            
            print_r('<div data-optionvalue="' . $optionValue . '" data-thumbindex="' . $index . '" class="color-image-thumb-container color-image-thumb-container-' . $optionValue . '"><img class="color-image-thumb" src="' . $image['full'] . '"><div class="color-image-thumb-caption">' . $image['caption'] . '</div></div>');
        }
    }
    
?>
